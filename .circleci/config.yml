version: 2
jobs:
  build:
    docker:
      - image: google/cloud-sdk
    working_directory: ~/code
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    steps:
      - run:
          name: Google cloud authrization
          command: |
            echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet auth configure-docker "$DOCKER_IMAGE_INSTANCE"
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies-
      - run:
          name: Check dependencies
          command: ./gradlew dependencies
      - run:
          name: Increase version
          command: |
            git config --global user.name $GIT_USERNAME
            git config --global user.email $GIT_USEREMAIL
            git clone https://github.com/dvpermyakov/increment-version-bash.git
            cd increment-version-bash/
            chmod u+x ./increment.sh
            ./increment.sh -r $CIRCLE_REPOSITORY -b $CIRCLE_BRANCH -m master -f version.txt
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}
      - run:
          name: Run Unit tests
          command: ./gradlew test
      - run:
          name: Assemble build
          command: ./gradlew assemble
      - run:
          name: Publish Maven artifact
          command: |
            echo "verion increment doesn't work"
#            if [ "$CIRCLE_BRANCH" = "master" ]; then
#              ./gradlew publish
#            fi
      - run:
          name: Build Docker image
          command: |
            export VERSION=`cat version.txt`
            docker build -t $DOCKER_IMAGE_INSTANCE/$DOCKER_IMAGE_NAME:$VERSION . --build-arg VERSION="$VERSION"
      - run:
          name: Push Docker image
          command: |
            export VERSION=`cat version.txt`
            if [ "$CIRCLE_BRANCH" = "master" ]; then
              docker push $DOCKER_IMAGE_INSTANCE/$DOCKER_IMAGE_NAME:$VERSION
            fi
      - run:
          name: Create new Cloud Run image
          command: |
            export VERSION=`cat version.txt`
            chmod u+x ./cloud-run-deploy.sh
            if [ "$CIRCLE_BRANCH" = "master" ]; then
              ./cloud-run-deploy.sh
            di